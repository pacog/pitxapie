{"version":3,"sources":["components/Animal/pig.svg","components/Animal/crocodile.svg","components/Animal/dog.svg","components/Animal/elephant.svg","components/Animal/fox.svg","components/Animal/giraffe.svg","components/Animal/lion.svg","components/Animal/chick.svg","components/Animal/crab.svg","components/Animal/chicken.svg","components/Animal/boar.svg","components/Animal/cow.svg","components/Animal/frog.svg","components/Animal/goat.svg","components/Animal/rooster.svg","components/Animal/sheep.svg","components/DetectAnyInput/index.tsx","utils/random.ts","components/Animal/getRandomAnimal.ts","components/Animal/index.tsx","utils/play-sound.ts","pages/Animals/index.tsx","App.tsx","serviceWorker.js","utils/add-vh-css-var.ts","index.tsx"],"names":["module","exports","isTouchSupported","document","documentElement","DetectAnyInput","props","rootRef","onAnyInput","React","createRef","throttle","this","current","focus","ref","onMouseUp","onKeyUp","onTouchStart","tabIndex","children","Component","getRandomFromArray","array","Math","floor","random","length","ALL_ANIMALS","src","crocodile","name","sounds","dog","elephant","fox","giraffe","lion","chick","pig","crab","chicken","boar","cow","frog","goat","rooster","sheep","getRandomAnimal","getRandomPosition","Animal","initialX","initialY","randomAnimal","soundUrl","sound","process","Promise","resolve","Howl","on","play","div","className","animate","scale","initial","x","y","onAnimationComplete","onAnimationEnd","alt","Animals","useState","shownAnimals","setShownAnimals","uuid","backgroundColor","transition","yoyo","Infinity","duration","ease","map","id","key","filter","animalId","App","path","Boolean","window","location","hostname","match","setVH","vh","innerHeight","style","setProperty","addEventListener","debounce","addVHCSSVar","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d503798.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pig.ddde7cb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/crocodile.0d5b5d73.svg\";","module.exports = __webpack_public_path__ + \"static/media/dog.5745b4ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/elephant.6bf760fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/fox.9e588f4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/giraffe.5fe657a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/lion.99420a8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/chick.4c04d0d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/crab.47e7a89f.svg\";","module.exports = __webpack_public_path__ + \"static/media/chicken.ac86d0fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/boar.812db292.svg\";","module.exports = __webpack_public_path__ + \"static/media/cow.118894da.svg\";","module.exports = __webpack_public_path__ + \"static/media/frog.5947c8f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/goat.a45cfdd0.svg\";","module.exports = __webpack_public_path__ + \"static/media/rooster.c5bf81f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/sheep.da86707b.svg\";","import React from \"react\";\nimport { throttle } from \"lodash\";\n\ninterface DetectAnyInputProps {\n    children: React.ReactNode;\n    onAnyInput: () => void;\n}\n\nconst isTouchSupported = \"ontouchstart\" in document.documentElement;\n\nclass DetectAnyInput extends React.Component<DetectAnyInputProps> {\n    constructor(props: DetectAnyInputProps) {\n        super(props);\n        this.rootRef = React.createRef<HTMLDivElement>();\n        this.onAnyInput = throttle(props.onAnyInput, 300);\n    }\n\n    rootRef: React.RefObject<HTMLDivElement>;\n\n    onAnyInput: () => void;\n\n    componentDidMount() {\n        if (this.rootRef.current !== null) {\n            this.rootRef.current.focus();\n        }\n    }\n\n    render() {\n        return (\n            <div\n                ref={this.rootRef}\n                onMouseUp={() => {\n                    if (isTouchSupported) {\n                        return;\n                    }\n                    this.onAnyInput();\n                }}\n                onKeyUp={this.onAnyInput}\n                onTouchStart={this.onAnyInput}\n                tabIndex={0}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default DetectAnyInput;\n","export function getRandomFromArray<T>(array: T[]): T {\n    const randomIndex = Math.floor(Math.random() * array.length);\n    return array[randomIndex];\n}\n","import crocodile from \"./crocodile.svg\";\nimport dog from \"./dog.svg\";\nimport elephant from \"./elephant.svg\";\nimport fox from \"./fox.svg\";\nimport giraffe from \"./giraffe.svg\";\nimport lion from \"./lion.svg\";\nimport chick from \"./chick.svg\";\nimport pig from \"./pig.svg\";\nimport crab from \"./crab.svg\";\nimport chicken from \"./chicken.svg\";\nimport boar from \"./boar.svg\";\nimport cow from \"./cow.svg\";\nimport frog from \"./frog.svg\";\nimport goat from \"./goat.svg\";\nimport rooster from \"./rooster.svg\";\nimport sheep from \"./sheep.svg\";\nimport { getRandomFromArray } from \"utils/random\";\n\ninterface IAnimalInfo {\n    src: string;\n    name: string;\n    sounds: string[];\n}\n\nconst ALL_ANIMALS = [\n    {\n        src: crocodile,\n        name: \"crocodile\",\n        sounds: [\"/sounds/crocodile1.mp3\", \"/sounds/crocodile2.mp3\"]\n    },\n    {\n        src: dog,\n        name: \"dog\",\n        sounds: [\"/sounds/dog1.mp3\", \"/sounds/dog2.mp3\", \"/sounds/dog3.mp3\"]\n    },\n    {\n        src: elephant,\n        name: \"elephant\",\n        sounds: [\"/sounds/elephant1.mp3\", \"/sounds/elephant2.mp3\"]\n    },\n    {\n        src: fox,\n        name: \"fox\",\n        sounds: [\"/sounds/fox1.mp3\"]\n    },\n    {\n        src: giraffe,\n        name: \"giraffe\",\n        sounds: [\"/sounds/giraffe1.mp3\", \"/sounds/giraffe2.mp3\"]\n    },\n    {\n        src: lion,\n        name: \"lion\",\n        sounds: [\"/sounds/lion1.mp3\", \"/sounds/lion2.mp3\"]\n    },\n    {\n        src: chick,\n        name: \"chick\",\n        sounds: [\"/sounds/chick1.mp3\"]\n    },\n    {\n        src: pig,\n        name: \"pig\",\n        sounds: [\"/sounds/pig1.mp3\", \"/sounds/pig2.mp3\"]\n    },\n    {\n        src: crab,\n        name: \"crab\",\n        sounds: [\"/sounds/crab1.mp3\"]\n    },\n    {\n        src: chicken,\n        name: \"chicken\",\n        sounds: [\"/sounds/chicken1.mp3\", \"/sounds/chicken2.mp3\"]\n    },\n    {\n        src: boar,\n        name: \"boar\",\n        sounds: [\"/sounds/pig1.mp3\", \"/sounds/pig2.mp3\"]\n    },\n    {\n        src: cow,\n        name: \"cow\",\n        sounds: [\"/sounds/cow1.mp3\", \"/sounds/cow2.mp3\"]\n    },\n    {\n        src: frog,\n        name: \"frog\",\n        sounds: [\"/sounds/frog1.mp3\", \"/sounds/frog2.mp3\"]\n    },\n    {\n        src: goat,\n        name: \"goat\",\n        sounds: [\"/sounds/goat1.mp3\", \"/sounds/goat2.mp3\"]\n    },\n    {\n        src: pig,\n        name: \"pig\",\n        sounds: [\"/sounds/pig1.mp3\", \"/sounds/pig2.mp3\"]\n    },\n    {\n        src: rooster,\n        name: \"rooster\",\n        sounds: [\"/sounds/rooster1.mp3\", \"/sounds/rooster2.mp3\"]\n    },\n    {\n        src: sheep,\n        name: \"sheep\",\n        sounds: [\"/sounds/sheep1.mp3\", \"/sounds/sheep2.mp3\"]\n    }\n];\n\nexport const getRandomAnimal = (): IAnimalInfo => {\n    return getRandomFromArray(ALL_ANIMALS);\n};\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { getRandomAnimal } from \"./getRandomAnimal\";\nimport { playSound } from \"utils/play-sound\";\nimport { getRandomFromArray } from \"utils/random\";\nimport \"./style.css\";\n\ninterface IAnimalProps {\n    onAnimationEnd: () => void;\n}\n\nclass Animal extends React.Component<IAnimalProps> {\n    initialX = getRandomPosition();\n    initialY = getRandomPosition();\n    randomAnimal = getRandomAnimal();\n\n    componentDidMount() {\n        const sound = getRandomFromArray(this.randomAnimal.sounds);\n        playSound(process.env.PUBLIC_URL + sound);\n    }\n\n    render() {\n        return (\n            <motion.div\n                className=\"animal\"\n                animate={{\n                    scale: [0, 1, 1, 1, 0]\n                }}\n                initial={{\n                    x: `${this.initialX}vw`,\n                    y: `${this.initialY}vh`,\n                    scale: 0.1\n                }}\n                onAnimationComplete={this.props.onAnimationEnd}\n            >\n                <img src={this.randomAnimal.src} alt={this.randomAnimal.name} />\n            </motion.div>\n        );\n    }\n}\n\nfunction getRandomPosition() {\n    return -25 + Math.floor(Math.random() * 50);\n}\n\nexport default Animal;\n","import { Howl } from \"howler\";\n\nexport const playSound = (soundUrl: string): Promise<void> => {\n    return new Promise(resolve => {\n        const sound = new Howl({\n            src: soundUrl\n        });\n\n        sound.on(\"end\", function() {\n            resolve();\n        });\n\n        sound.play();\n    });\n};\n","import React, { useState } from \"react\";\nimport DetectAnyInput from \"components/DetectAnyInput\";\nimport { motion } from \"framer-motion\";\nimport Animal from \"components/Animal\";\nimport { v4 as uuid } from \"uuid\";\nimport \"./style.css\";\n\nfunction Animals() {\n    const [shownAnimals, setShownAnimals] = useState<string[]>([]);\n\n    return (\n        <DetectAnyInput\n            onAnyInput={() => {\n                setShownAnimals([...shownAnimals, uuid()]);\n            }}\n        >\n            <motion.div\n                animate={{\n                    backgroundColor: [\n                        // \"#231942\",\n                        \"#5e548e\",\n                        \"#9f86c0\",\n                        \"#be95c4\"\n                        // \"#e0b1cb\"\n                    ]\n                }}\n                transition={{ yoyo: Infinity, duration: 10, ease: \"linear\" }}\n                className=\"animals full-screen\"\n            >\n                {shownAnimals.map(id => (\n                    <Animal\n                        key={id}\n                        onAnimationEnd={() => {\n                            setShownAnimals(\n                                shownAnimals.filter(animalId => animalId !== id)\n                            );\n                        }}\n                    />\n                ))}\n            </motion.div>\n        </DetectAnyInput>\n    );\n}\n\nexport default Animals;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Animals from \"pages/Animals\";\n\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\">\n                    <Animals />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import debounce from 'lodash.debounce';\n\nexport default function() {\n    const setVH = () => {\n        const vh = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', `${vh}px`);\n    };\n\n    window.addEventListener('resize', debounce(setVH, 200));\n    setVH();\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport addVHCSSVar from \"./utils/add-vh-css-var\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\naddVHCSSVar();\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}